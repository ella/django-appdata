[tox]
envlist =
    black
    blacken
    isort
    isort_format
    ruff
    pypi-description
    towncrier
    py{311,310,39}-django{42,41,40,32}
minversion = 3.23

[testenv]
commands = {env:COMMAND:python} setup.py test {posargs}
deps=
    django32: django~=3.2.0
    django40: django~=4.0.0
    django41: django~=4.1.0
    django42: django~=4.2.0
    -r{toxinidir}/requirements-test.txt
passenv =
    COMMAND
    PYTEST_*

[testenv:ruff]
commands =
    {envpython} -m ruff check app_data test_app_data
deps =
    interrogate
    ruff
skip_install = true

[testenv:isort]
commands =
    {envpython} -m isort -c --df app_data test_app_data
deps = isort~=5.12.0
skip_install = true

[testenv:isort_format]
commands =
    {envpython} -m isort app_data test_app_data
deps = {[testenv:isort]deps}
skip_install = true

[testenv:black]
commands =
    {envpython} -m black --check --diff .
deps = black
skip_install = true

[testenv:blacken]
commands =
    {envpython} -m black .
deps = {[testenv:black]deps}
skip_install = true

[testenv:pypi-description]
commands =
    {envpython} -m check_manifest
    {envpython} -m build .
    {envpython} -m twine check dist/*
deps =
    invoke
    check-manifest
    build
    twine
skip_install = true

[testenv:release]
commands =
    {envpython} -m check_manifest
    {envpython} -m build .
    {envpython} -m twine upload {posargs} dist/*
deps = {[testenv:pypi-description]deps}
passenv =
    TWINE_*
skip_install = true

[check-manifest]
ignore =
    .*
    *.ini
    *.toml
    *.json
    *.txt
    *.yml
    *.yaml
    .tx/**
    changes/**
    docs/**
    helper.py
    tasks.py
    test_app_data/**
    *.mo
ignore-bad-ideas =
    *.mo
